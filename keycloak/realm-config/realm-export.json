{
  "id": "f2165e11-5980-49ec-a3ca-ada0ab00f4d8",
  "realm": "fanta-mercato",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "3e71e472-d15f-4322-98cf-2a8ba50f865d",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "f2165e11-5980-49ec-a3ca-ada0ab00f4d8",
        "attributes": {}
      },
      {
        "id": "7c558a71-592d-43af-b356-ffb392bc9c07",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "f2165e11-5980-49ec-a3ca-ada0ab00f4d8",
        "attributes": {}
      },
      {
        "id": "f272807e-0175-4b81-981a-7d64dbe5cd80",
        "name": "default-roles-fanta-mercato",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "f2165e11-5980-49ec-a3ca-ada0ab00f4d8",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "4d8a0c02-2208-445a-b50f-a85e3684cb30",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "f0e98107-bd49-4349-95d3-918238a22b0b",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "a2ba7013-d91f-4dc6-ab15-05dfb04ebe4e",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "53df7039-3628-4ed0-8eef-b1e39e5b7008",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "04e67b43-7ab1-4667-9f15-d79083e1353c",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "572bbaea-4c16-4f89-a7f2-8e117c158630",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "bfd7042c-1674-4028-b52b-a5501c848abb",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "f4d14f30-a28d-4ca2-b5fa-8224f16b6239",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "5d761151-2270-4f48-9ec3-ac37ff499f23",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "ffd7509b-44fc-4ebb-8330-81c84ecd9fe3",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "d8109d47-e9ee-4338-8100-7e1067516956",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "60891f63-74ed-4471-a841-7fc79b85a882",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "ec409b0c-ccb0-4f75-993f-9798ddc23feb",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "e66f0063-161b-4a5c-ae8f-9c82c119500d",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "c1a4443c-1c1b-4580-a176-373467feb67a",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "impersonation",
                "query-clients",
                "query-realms",
                "view-realm",
                "manage-clients",
                "manage-users",
                "manage-events",
                "view-identity-providers",
                "query-users",
                "query-groups",
                "view-users",
                "view-authorization",
                "view-clients",
                "manage-realm",
                "create-client",
                "manage-authorization",
                "view-events",
                "manage-identity-providers"
              ]
            }
          },
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "a1fec052-9a9d-4dd2-b7ac-398826185074",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "eca3c6ae-a120-4eee-84a9-09005c6a9602",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "6f38528f-c0b5-4d38-935a-99b0aec1136b",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        },
        {
          "id": "cb69c493-5092-424b-ace9-9ff4d04d97cc",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "19555448-7560-44ee-8871-939d379b241f",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "3d58d7f4-60a9-4903-92c1-a7f1848a690f",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "c83becd0-4e26-4b70-9ebf-62faceb0a38c",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "7a2ed6a9-c02d-4bba-8d4e-8eee4e1bfaf9",
          "attributes": {}
        },
        {
          "id": "910fddb2-ca59-44e2-83af-22159f2703fb",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "7a2ed6a9-c02d-4bba-8d4e-8eee4e1bfaf9",
          "attributes": {}
        },
        {
          "id": "5c2e89a7-67be-40fb-9805-7244f573595a",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "7a2ed6a9-c02d-4bba-8d4e-8eee4e1bfaf9",
          "attributes": {}
        },
        {
          "id": "2ab74d0a-d47f-4f53-a145-033c2dbbce0e",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "7a2ed6a9-c02d-4bba-8d4e-8eee4e1bfaf9",
          "attributes": {}
        },
        {
          "id": "a79b4538-7d1b-49db-9f57-c1066b1364fe",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "7a2ed6a9-c02d-4bba-8d4e-8eee4e1bfaf9",
          "attributes": {}
        },
        {
          "id": "8ce2ac29-1784-4617-904c-940a8946d838",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "7a2ed6a9-c02d-4bba-8d4e-8eee4e1bfaf9",
          "attributes": {}
        },
        {
          "id": "b56286c5-259f-4aef-9d87-65ad492475d5",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "7a2ed6a9-c02d-4bba-8d4e-8eee4e1bfaf9",
          "attributes": {}
        },
        {
          "id": "715ebc58-973f-419c-bcdb-81aa84ba1c23",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "7a2ed6a9-c02d-4bba-8d4e-8eee4e1bfaf9",
          "attributes": {}
        }
      ],
      "fanta-mercato": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "f272807e-0175-4b81-981a-7d64dbe5cd80",
    "name": "default-roles-fanta-mercato",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "f2165e11-5980-49ec-a3ca-ada0ab00f4d8"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "7a2ed6a9-c02d-4bba-8d4e-8eee4e1bfaf9",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/fanta-mercato/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/fanta-mercato/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "649ef849-6d98-4f66-ae28-6fa80e632d71",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/fanta-mercato/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/fanta-mercato/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "a982624f-23ec-4bd9-b930-3b9480b642b0",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3afae84b-57d4-4f95-bae6-275e53ea2223",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3d58d7f4-60a9-4903-92c1-a7f1848a690f",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "22db89cf-c12f-4803-aa60-7b242623155f",
      "clientId": "fanta-mercato",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "EvvHPxWufLxqexyTap7tYbYivqzrjkJE",
      "redirectUris": [
        "http://localhost:8000/api/auth/callback"
      ],
      "webOrigins": [
        "http://localhost:4200",
        "http://localhost:8080"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1755242272",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "feeffbe1-3eab-4892-b1cc-b3e5eecc2448",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "705ae4ce-a807-47dc-98b2-eac614804b37",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/fanta-mercato/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/fanta-mercato/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "58750558-495c-4c5d-9e7a-90514d8c0330",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "07e382a8-8373-4db9-bbe8-a77dd26849dc",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b961a16d-0e7c-412d-b662-da4d7d0c15c5",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "d27f3ec2-1ed8-4a0c-979f-2ea65b2c07f6",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "0a6167ef-a12a-4cc0-b2a3-3bc8edcc5909",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "d9309ec7-5506-4432-aded-eed641d13b2e",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "5af8c494-7746-4e15-b985-a8ff092f9837",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ca99d90e-1a85-4b63-8875-18ad87d7c713",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "6f11fe4c-6b4a-466c-b80f-fccc3b4302bd",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        }
      ]
    },
    {
      "id": "26bb8354-db8d-46e7-900a-f6204f3dea70",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "a39545b2-f054-454d-877d-553dd05f90bc",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cd943606-3f7c-48d2-950a-afcbcaf1dd51",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "0ae1d566-d73c-4929-bf98-3df82da24156",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "3a22dc58-675d-41f7-b8be-fb8ccbb0d849",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "f413a085-9dc8-407e-847b-3a7ca755518e",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "cf17f794-7764-4995-9ce4-64ef1f79cddf",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "9ad3dfe1-814a-4e90-aa3c-f081e8c74c24",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "e7268471-c540-4835-8354-8b80f806d991",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7766e8e5-165d-4481-b650-081ef8366bfe",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "0c6c8a62-e241-4264-8b79-3f704f710d2c",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8855a34f-8c11-4da1-a96e-5579ad761b40",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b18897e2-a10d-44fd-bccf-1dd4cc6da016",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5abe4a1d-8829-4aa0-9689-c1529c05c491",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4ec28b50-943e-4b78-8aef-b03f6d5cb222",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d18625bf-a326-402c-9f4a-f30a929f7447",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c3e93239-9e67-4c31-91e4-87d052f4859d",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d066bd72-02cb-4140-a31f-a13f91876477",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "229f0ba6-6d3d-426f-9c67-08ea5a620000",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "1b52014c-910a-4e35-a7bd-4223f2a01bb1",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fbfe4ef4-fddc-43c7-acaf-3d14cda8f5ce",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "20fda512-2b04-47ea-a9d7-29185787e4ca",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "ee782076-a7d1-420e-bf65-f5a43e7ad5b2",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "ff847af7-9356-4776-ba99-e8e89b7bfe5e",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "c7324549-249c-4ad7-aa91-362170840e86",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "7679a802-71c7-48b0-9d2b-7fdc567c907b",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "c2dde3f0-810a-475a-aa4d-86914e2abd2a",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3c9e0b61-8d89-4c2f-906e-5d4c8505a03d",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "eeaa4392-4c70-473e-bf9c-68f5b7b282c7",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "36102a87-915a-49de-a07a-52420a18fc9d",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f3bb9e01-a4fe-4d55-b391-c2e9626e88d7",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "3cfb3a7c-7cce-4234-9038-1c3fd31a05bc",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "6fc233b9-ccca-4f51-b20a-3ea2dbe63e27",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "fe6ae430-3e62-4498-bebf-7403bf13eb98",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "c7bf32e5-8045-4d4d-9f08-d9fcacc8cefe",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "012a3d73-fdcf-40f0-9768-1d78f6826b66",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "34c8e07f-573f-424b-80fb-d86989a782e9",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "8829b3e3-9e9d-4c40-9995-07036bd7829a",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "0dd6babe-1c42-466e-8f2b-6ddcaee23b96",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "786c3e5f-6bf9-4b54-bbba-18edaf556b95",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "c7a1bc43-a390-47ec-b0fb-5a5bd9de662a",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "3058eeae-6fd7-4d47-9de4-436dfec17bfe"
          ],
          "secret": [
            "WlppZhXVdy6pjFGTOQRheek0DSWMsu323H4HmT2bcPJN6seUKZtPTPXkZ5gtV45b6tAaRFz_zjss1lzVA8K8xrurNRaBLhAnkxsrtdRutSaityVGSkmlKyJPDv8TlEDRLFtE6Ii8QsAbcOXwTF-INVehXgN6aOc4FHjIuv5iyt8"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "a499d2c1-47ee-4b86-898a-c702f64aaadd",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "114eef2d-0b59-48e1-840a-ce7b76c939e2"
          ],
          "secret": [
            "cxtZrOH_Pd3YxVXkjkj2aA"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "705745b4-913e-450b-9376-c1b80e244da9",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEApuGBsPFye6hcUD3eIGPg39TvX3TLiQtHATsqGWgCGlEDHToYKUrysAouGBXxm+LQKvCC+4hRLudWQz6ExtKRyQICtE8tnfuI00s4hBP8fcBIomdAQ8x7pfBcFjjbcE4mCgCmsleOgB49E4lI/UAEyVXF69Y5IkL/2L7xEfKwzcojo91vn7cP3kg9bMHXAOwcSAXjjjFN9aCvfFh/H5bEpNnziomrZKVXyG0y+ZEqMkFMAQRGZayyNvkKHEuo8XdhKoHDpX+nYb4cG9FEcFDDhI8LfPAdr3iRAlyT9xP2GP1blokzrB+/p9cxFnOfuOueNZbE2AOYEvfylTIVLDDr/wIDAQABAoIBADUrqpfHBjPyG5+RZsGpMRAAF1ixrNv4VOJGiI5ZvjnGUBiy1tnpQFPomnEgJMAHT04vHXypHTy1hp2cQM/cbYi+9D+g7qbkat7vm40xlQQ4DKx5+1bewxLG94A5E2m/7IzJUlOGZCfb+pfL6Q6PpDbF9m7C7adF86CKjeKrEbwvRN5KJAKbK2VKuju6/jh1yHiKB6e8btNRriCMIPM8FPFqEFc2E7CYh6QaXbL7obwvWWt9pCtdUDeuzwYpyaKaUK1NA8THqHAJ56pxbMPua+6DSQtMBttwUBpDdQiTir5cgLsTWPNZ+80+W/6peQ/Ny7bBXU3dj2j6Rq4RkzwQvDkCgYEA0HxQoVLM3O1edOW55ofIHo8CkbTOD1nUw9iVj6hAGlrdbWVp5zgOflkip/Me7bIkPCk7bR9wEZJryaa3c5XoVQ6+v9afqSEkl/KiKgAXC1MCypv5xZeZ0QJN9e7BH/VTbKZqoCuYccVc2TH6FxhNgZFuFAQG/pwmwfgl8mmeJQ0CgYEAzOnYeHi98Mfdipvuc5Z6hc3fjhjxMhT63t/R38siiKEeJ/LN29omkeC+oow5BclaehCoYFRz07F5MrdbGqNwgRwfAButprIMjhMtIHppQ+iioh4W6rqR35yPjTL+T/38Z6eTjEwB+bSASVbz0Vy/kBxnUFbmbhs6FximKoNDajsCgYEAkdakQHU/QTv6WyNny08oOdgoH+yuSCa6otUaqgcz8DunsSLD1i5sVQ3dJEb5V6TJnBvrqgXXyzL1m3W31m8Cup056dAkl5bLlk7wCRlPBWjoBvrc2c+WlZJbHrII/mYKGXLAG5LjbJJ2xKglHYqujPhCXFYE3o40vnLreItRSPECgYBU6U3nVfk3TkrSRh1ATonE6nOJuXIxE5qFQnAAcXeE8GbDnQyK3tH+vwef6cUzTaWtUTvEdxpsDW2wg2RAHJvhFFsQO2fw3HTxZqbbf34hQsQps5hBekA6TfD6TLgvQ4sVFM7CYziqVY6XVW3BQtKqj+qL0wa3d5bRvUgV88C6wwKBgQCszaQ2xcMoVGuQjAhRUNvBv+x9uZYcTavZXSHxfsQnAgCE/vcO43bf2J6RPCp/L6DCT/YsBGn7yppWrAWmLPLAGhrLFaMHz6YMk6GrFZiwChbiIDciRFtWw4PQI/au/aHow0dwsrB6MA2AjprbIxwo8kH17eNHpNwGTxjqpcgCqA=="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICqTCCAZECBgGYrJdEZzANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1mYW50YS1tZXJjYXRvMB4XDTI1MDgxNTA3MTU1MVoXDTM1MDgxNTA3MTczMVowGDEWMBQGA1UEAwwNZmFudGEtbWVyY2F0bzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKbhgbDxcnuoXFA93iBj4N/U7190y4kLRwE7KhloAhpRAx06GClK8rAKLhgV8Zvi0CrwgvuIUS7nVkM+hMbSkckCArRPLZ37iNNLOIQT/H3ASKJnQEPMe6XwXBY423BOJgoAprJXjoAePROJSP1ABMlVxevWOSJC/9i+8RHysM3KI6Pdb5+3D95IPWzB1wDsHEgF444xTfWgr3xYfx+WxKTZ84qJq2SlV8htMvmRKjJBTAEERmWssjb5ChxLqPF3YSqBw6V/p2G+HBvRRHBQw4SPC3zwHa94kQJck/cT9hj9W5aJM6wfv6fXMRZzn7jrnjWWxNgDmBL38pUyFSww6/8CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAikn6g4eHfM3bKIG+oTjsH/E1xJ03MjD7TJLSup9su/dIP9uKDE7wVivSq06oZSdRrI87sOAEdqYQcvrCWTY4LtCO1eBRuAVQ1VpodfiusjLJ1E9Mtcdv3lGG1IpRvgY4mEiKc/CMPk/4p4ieUStb49yHy2MlFEXTpks7pNMcKVfFUH6/gnke31eZM3csepA6R1xHAgNUQ91pk0+sYVIZHgj9GL498uPI1bUEOyDkarB3seyNL08YlbtJd0FF07hxMN2dUhXsNCnPGIdoRBr+f5IVAvZHv2QRCZK6SGe9YF8rOwMKlTWMEwZofiC9lEaMhoRBbD6tBiN5YWaf1u+G7w=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "39256bed-73a1-4e47-a1ff-b7810462d374",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpQIBAAKCAQEAz2lnx0sD1kFiOIfNJdCjnUCSrumtrBFYMqADNnBN02x+LKFUcng6KyMVvW0H5hc9yKoos6PxmVHBqXWCgvdRoI2XbCe/XyUDjZGUhE6SX09lMCVIsDRX8qYN/RcZS0o7bsxarUWgyu9/ocjpDYTx0bJRW2hgWzr6NWWd+xX01DlvK5nQfu2G4RX0NhwK2f3z+h3TyNTse/KXsJob4aRsgBoAxXNo8ZfuIh2B5liJiFqEzUz2C3TdsvjuH+gyidHaO0Poqcm3A/u/tLREiUhoL3L1lRx3VE9kwe7KFcPRpt/hKsQazIyq61l1QSvNuMVZnXr7fmcL8NB627rYSkfcjwIDAQABAoIBAB9hb7mn4Fs8xjsOVNwJTo/esrKzGTsk3qa+Le5BHI1F52siN5AgH5DiPIpN4jmOP6NKF2Fihw2u4HGenVHqUFfNxGCxPNOM2pZDNei0qJGyBfm8UlySdtH4DLrDkWiiQQ647Wk01SiPBsz4BEau3BVheMyvJJD5Ad0tVDMmdcXb6unz+BztPG+agApoE4VkxBFO1I/S5Sgi5wuz+c4mGJlfYbVJlJVk+K8x7YLc2ga6cF/pZAGz8P4MIYytzZOzpbAvMkvemEKvUaTejUw5dQsZBFd2Smn7bsk3qncCWcdf6PC6/i8E6n4h2j6GB06GwSyxAl7/dv6TS4FYmSWnG40CgYEA8NRlnoKgVlw2DP2O67aBCqxXv7EX5LYTGbExq0HUtAf6SsON4DIjVyfUuybTbb9j4WPk9QmP+dbq8ktms3lq6q2KYRNbxgo+LlDRypqew96r5q3abVvgyHms8096RdVSoDI6yBGFQfQtB1eeB1AKKGWOaCpPHfEu1aSbZ84/hnMCgYEA3Hoc8b1fpy73YZALxkX171szqsN4Eg+H3FJV2cP46DU0JNpzsTs9O8vpdpneIebf6mphaNUtqpusgTYuBQWARCazSDpnRuDWOovBefNyAnxiBTjaVKEoYM5ljb5NI+7w3XN79uhwxg057CqVLSNef/caVipCZpgbJMDfeZ4ebnUCgYEAxy8kjSGE82h42+2rE5Fy0R0Rxl32YRemXI2NgxODlRM0FDoBUfil+iPbcp7+J7swJO62I2SxS/ZRg+yRGMfHgineVcPpF7bJDw2RNn0D6wR0MOqBygk/tQ/N179YZgG1wQFKVMcI7C/EPlpdPbcZb6fvTIARx7X/AnyOfCC9sbkCgYEA0ybMA6S3MBkl6LUY4bns8GBrGhb8LmfbWOEtwVITVuhlWQoyFMHEQjlnDSQNfnBrcEiTo9/OTX+r9U+bQUnkbuCVgQ4WDOaVpRploFLLlJ/lDFVHnBd/4T6qOdbQcCKNYbkRNwWjw7m1CH47wjAGeA2ClpUAZNs127wwCnypbmUCgYEAmJIpBrr6Jq8E96LYQdftbFS1/MDNbRjz8gusxfYconadRl3jO2IzvbKN5hDr4Ij12arAodcLBZ+dEOF8RKteZzaNKSvIGM1uIY74jw3WeWslyl4bCe5BwruH1Jt+oKKxcfIdUlZ19pT+wOMywSTpRB43h9rF0M469Z7zW08sP3M="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICqTCCAZECBgGYrJdEqjANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1mYW50YS1tZXJjYXRvMB4XDTI1MDgxNTA3MTU1MVoXDTM1MDgxNTA3MTczMVowGDEWMBQGA1UEAwwNZmFudGEtbWVyY2F0bzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM9pZ8dLA9ZBYjiHzSXQo51Akq7prawRWDKgAzZwTdNsfiyhVHJ4OisjFb1tB+YXPciqKLOj8ZlRwal1goL3UaCNl2wnv18lA42RlIROkl9PZTAlSLA0V/KmDf0XGUtKO27MWq1FoMrvf6HI6Q2E8dGyUVtoYFs6+jVlnfsV9NQ5byuZ0H7thuEV9DYcCtn98/od08jU7Hvyl7CaG+GkbIAaAMVzaPGX7iIdgeZYiYhahM1M9gt03bL47h/oMonR2jtD6KnJtwP7v7S0RIlIaC9y9ZUcd1RPZMHuyhXD0abf4SrEGsyMqutZdUErzbjFWZ16+35nC/DQetu62EpH3I8CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAuE+jzeb3nbp4jc+pcEyjParwxH2ILmVS0qzcLo4Kv+/cYpVRrz9P7lXSXqB2ePgODva0V94+FDpNvHLOioNqLu21QQLdQo/TIjbdm8wNelm50XnqlZmkzIJlXmyysndd39Z4Tfa++Sl/0q3HaR71nBs0bCnmkSrcPMni3M1evaLgzhbphrAk+C+hREv7gTTKMwSFN6gYbJtNUF6Hcj7b/VFAMe5zuGEQ0zk28BOwH+nZsKDrnnKfPDLJ07RcDTDarCnZW32xPLBTmJ3AH/2gecc5k20UgkLWQorcKiaTnYcWGJxPrcO4pK0SVy8oztyWLfPchdhooNu2CGjkIRBdAQ=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "0ccd20bd-ba3f-4558-b3c0-4337c692543a",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cfa4954e-ede7-44aa-97ed-80ec5c88a3a1",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d405f9f8-f4d2-4f2a-9d80-2a897f8f8ab2",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "daa35a40-5fc8-428a-8738-e4774d42bd64",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "18664a0e-0a08-4bba-9e5e-87e98305f051",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3ec19542-65df-4773-9c1e-9fda1ae595f5",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f07cf552-2c67-453c-b410-75acc753db62",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b13c6e0a-d6df-469a-856f-90d391158e6a",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "dcdbca72-ddd4-4de9-b31e-1619b5130382",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aa3cb6b1-3ce4-4c4e-b1e5-cd22a4101ffc",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "dc3099ff-b5e9-469b-9b95-4d661989534b",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "26817ba8-3278-4a90-aa18-f8abab096012",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7d05e0d6-a41d-4d48-88c1-5b061226a31b",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "408d6e02-e835-488d-a892-c0c9c096eb81",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7c1ac64f-85fc-4acc-922e-80a78dea6221",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7a0f3067-9adf-4145-8e56-41fc32a00e94",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c478c887-e363-4b38-9955-6c5654bb9484",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "82ab57cc-49d2-40c7-87ba-724628cfa234",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "78ba1ac2-fa55-4778-afcd-6138f36a12f6",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "d879e87f-63a6-41cd-942c-793847cb7901",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "25.0.1",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}